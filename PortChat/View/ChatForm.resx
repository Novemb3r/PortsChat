<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>